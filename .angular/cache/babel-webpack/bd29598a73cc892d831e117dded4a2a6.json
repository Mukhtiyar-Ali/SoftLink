{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CustomerService } from 'app/customer/customer.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nvar LOVComponent = /*#__PURE__*/function () {\n  function LOVComponent(customer, router, utility, dialogRef, data) {\n    _classCallCheck(this, LOVComponent);\n\n    this.customer = customer;\n    this.router = router;\n    this.utility = utility;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.DisplyColumns = [];\n    this.CustomerData = [];\n  }\n\n  _createClass(LOVComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      if (this.utility.LOVOption == \"Customer\") {\n        this.Title = this.utility.Title;\n        this.customer.GetCustomers().subscribe(function (data) {\n          _this.APIData = data;\n          _this.DisplyColumns = [];\n\n          for (var i = 0; i < _this.APIData.length; i++) {\n            _this.CustomerData.push({\n              ID: _this.APIData[i].customerId,\n              Name: _this.APIData[i].customerName,\n              Mobile: _this.APIData[i].mobileNo,\n              Email: _this.APIData[i].emailAddress,\n              City: _this.APIData[i].cityName,\n              Country: _this.APIData[i].countryName\n            });\n          }\n\n          _this.DisplyColumns = ['ID', 'Name', 'Mobile', 'Email', 'City', 'Country'];\n        }); // console.log(this.CustomerData);\n\n        this.dataSource = new MatTableDataSource(this.CustomerData);\n      }\n    }\n  }, {\n    key: \"Cancel\",\n    value: function Cancel() {\n      this.dialogRef.close();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(filterValue) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n  }, {\n    key: \"getRecord\",\n    value: function getRecord(emprow) {\n      this.dialogRef.close({\n        data: {\n          CustomerID: emprow.ID\n        }\n      });\n    }\n  }]);\n\n  return LOVComponent;\n}();\n\nLOVComponent = __decorate([Component({\n  selector: 'app-lov',\n  templateUrl: './lov.component.html',\n  styleUrls: ['./lov.component.scss']\n}), __param(4, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [CustomerService, Router, UtilityServiceService, MatDialogRef, Object])], LOVComponent);\nexport { LOVComponent };","map":null,"metadata":{},"sourceType":"module"}