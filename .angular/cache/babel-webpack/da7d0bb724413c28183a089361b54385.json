{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CustomerService } from 'app/customer/customer.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChartofAccountService } from 'app/glaccounts/chartof-account.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SupplierService } from 'app/supplier/supplier.service';\n\nvar LOVComponent = /*#__PURE__*/function () {\n  function LOVComponent(customer, supplier, glAccountService, router, utility, dialogRef, data) {\n    _classCallCheck(this, LOVComponent);\n\n    this.customer = customer;\n    this.supplier = supplier;\n    this.glAccountService = glAccountService;\n    this.router = router;\n    this.utility = utility;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.sortField = 'ID';\n    this.show = true;\n    this.DisplyColumns = [];\n    this.CustomerData = [];\n    this.SupplierData = [];\n    this.GLAccountData = [];\n    this.color = this.utility.ColorSelection();\n  }\n\n  _createClass(LOVComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.utility.LOVOption == \"Customer\") {\n        this.getCustomerData();\n        this.sortField = 'ID';\n        this.dataSource = new MatTableDataSource(this.CustomerData);\n      } else if (this.utility.LOVOption == \"Supplier\") {\n        this.getSupplierData();\n        this.sortField = 'ID';\n        this.dataSource = new MatTableDataSource(this.SupplierData);\n      } else if (this.utility.LOVOption == \"Customer GL Accounts\" || this.utility.LOVOption == \"Supplier GL Account\") {\n        this.getGLAccounts();\n        this.sortField = 'Account';\n        this.dataSource = new MatTableDataSource(this.GLAccountData);\n      }\n\n      this.dataSource.paginator = this.paginator;\n    }\n  }, {\n    key: \"getSupplierData\",\n    value: function getSupplierData() {\n      var _this = this;\n\n      this.Title = this.utility.Title;\n      this.supplier.GetSupplier().subscribe(function (data) {\n        _this.APIData = data;\n        _this.DisplyColumns = [];\n\n        for (var i = 0; i < _this.APIData.length; i++) {\n          _this.SupplierData.push({\n            'ID': _this.APIData[i].supplierId,\n            'Supplier Name': _this.APIData[i].supplierName,\n            'Mobile No': _this.APIData[i].mobileNo,\n            'Email': _this.APIData[i].emailAddress,\n            'City': _this.APIData[i].cityName,\n            'Country': _this.APIData[i].countryName\n          });\n        }\n\n        _this.DisplyColumns = ['ID', 'Supplier Name', 'Mobile No', 'Email', 'City', 'Country'];\n      });\n    }\n  }, {\n    key: \"ChangeSort\",\n    value: function ChangeSort(event) {\n      this.sortField = event;\n    }\n  }, {\n    key: \"getCustomerData\",\n    value: function getCustomerData() {\n      var _this2 = this;\n\n      this.Title = this.utility.Title;\n      this.customer.GetCustomers().subscribe(function (data) {\n        _this2.APIData = data;\n        _this2.DisplyColumns = [];\n\n        for (var i = 0; i < _this2.APIData.length; i++) {\n          _this2.CustomerData.push({\n            'ID': _this2.APIData[i].customerId,\n            'Customer Name': _this2.APIData[i].customerName,\n            'Mobile No': _this2.APIData[i].mobileNo,\n            'Email': _this2.APIData[i].emailAddress,\n            'City': _this2.APIData[i].cityName,\n            'Country': _this2.APIData[i].countryName\n          });\n        }\n\n        _this2.DisplyColumns = ['ID', 'Customer Name', 'Mobile No', 'Email', 'City', 'Country'];\n      });\n    }\n  }, {\n    key: \"getGLAccounts\",\n    value: function getGLAccounts() {\n      var _this3 = this;\n\n      this.Title = this.utility.Title;\n      this.glAccountService.GL_AccountsLOV().subscribe(function (data) {\n        _this3.APIData = data;\n        _this3.DisplyColumns = [];\n\n        for (var i = 0; i < _this3.APIData.length; i++) {\n          _this3.GLAccountData.push({\n            'Account': _this3.APIData[i].accountCode,\n            'Description': _this3.APIData[i].accountName\n          });\n        }\n\n        _this3.DisplyColumns = ['Account', 'Description'];\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"Cancel\",\n    value: function Cancel() {\n      this.dialogRef.close();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(filterValue) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n  }, {\n    key: \"getRecord\",\n    value: function getRecord(emprow) {\n      if (this.utility.LOVOption == \"Customer\") {\n        this.selectedRow = emprow.ID;\n        this.dialogRef.close({\n          data: {\n            CustomerID: emprow.ID\n          }\n        });\n      } else if (this.utility.LOVOption == \"Supplier\") {\n        this.selectedRow = emprow.ID;\n        this.dialogRef.close({\n          data: {\n            SupplierID: emprow.ID\n          }\n        });\n      } else if (this.utility.LOVOption == \"Customer GL Accounts\" || this.utility.LOVOption == \"Supplier GL Account\") {\n        this.selectedRow = emprow.account;\n        this.dialogRef.close({\n          data: {\n            AccountCode: emprow.Account,\n            Description: emprow.Description\n          }\n        });\n      }\n    }\n  }]);\n\n  return LOVComponent;\n}();\n\n__decorate([ViewChild(MatPaginator), __metadata(\"design:type\", MatPaginator)], LOVComponent.prototype, \"paginator\", void 0);\n\nLOVComponent = __decorate([Component({\n  selector: 'app-lov',\n  templateUrl: './lov.component.html',\n  styleUrls: ['./lov.component.scss']\n}), __param(6, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [CustomerService, SupplierService, ChartofAccountService, Router, UtilityServiceService, MatDialogRef, Object])], LOVComponent);\nexport { LOVComponent };","map":null,"metadata":{},"sourceType":"module"}