{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/modelProvider.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getGroupCount } from \"./resources/utils\";\nimport { isObject } from \"../../core/utils/type\";\nimport { getCurrentView } from \"../../renovation/ui/scheduler/model/views\";\nexport var ModelProvider = /*#__PURE__*/function () {\n  function ModelProvider(model) {\n    _classCallCheck(this, ModelProvider);\n\n    this.model = model;\n    this.currentView = null;\n  }\n\n  _createClass(ModelProvider, [{\n    key: \"key\",\n    get: function get() {\n      return this.model.key;\n    }\n  }, {\n    key: \"loadedResources\",\n    get: function get() {\n      return this.model.loadedResources;\n    }\n  }, {\n    key: \"startDayHour\",\n    get: function get() {\n      return this.model.startDayHour;\n    }\n  }, {\n    key: \"endDayHour\",\n    get: function get() {\n      return this.model.endDayHour;\n    }\n  }, {\n    key: \"adaptivityEnabled\",\n    get: function get() {\n      return this.model.adaptivityEnabled;\n    }\n  }, {\n    key: \"rtlEnabled\",\n    get: function get() {\n      return this.model.rtlEnabled;\n    }\n  }, {\n    key: \"maxAppointmentsPerCell\",\n    get: function get() {\n      return this.getCurrentViewOption(\"maxAppointmentsPerCell\");\n    }\n  }, {\n    key: \"currentViewOptions\",\n    get: function get() {\n      return this.currentView;\n    }\n  }, {\n    key: \"currentViewType\",\n    get: function get() {\n      return isObject(this.currentView) ? this.currentView.type : this.currentView;\n    }\n  }, {\n    key: \"agendaDuration\",\n    get: function get() {\n      return this.model.agendaDuration;\n    }\n  }, {\n    key: \"currentDate\",\n    get: function get() {\n      return this.model.currentDate;\n    }\n  }, {\n    key: \"timeZone\",\n    get: function get() {\n      return this.model.timeZone;\n    }\n  }, {\n    key: \"isRenovatedAppointments\",\n    get: function get() {\n      return this.model.isRenovatedAppointments;\n    }\n  }, {\n    key: \"supportAllDayResizing\",\n    value: function supportAllDayResizing() {\n      return \"day\" !== this.currentViewType || this.currentView.intervalCount > 1;\n    }\n  }, {\n    key: \"updateCurrentView\",\n    value: function updateCurrentView() {\n      var views = this.model.views;\n      var currentView = this.model.currentView;\n      this.currentView = getCurrentView(currentView, views);\n    }\n  }, {\n    key: \"isGroupedByDate\",\n    value: function isGroupedByDate() {\n      return this.model.groupByDate && this._isHorizontalGroupedWorkSpace() && getGroupCount(this.loadedResources) > 0;\n    }\n  }, {\n    key: \"_isHorizontalGroupedWorkSpace\",\n    value: function _isHorizontalGroupedWorkSpace() {\n      return !!this.loadedResources.length && \"horizontal\" === this.model.groupOrientation;\n    }\n  }, {\n    key: \"getCurrentViewOption\",\n    value: function getCurrentViewOption(optionName) {\n      if (this.currentView && void 0 !== this.currentView[optionName]) {\n        return this.currentView[optionName];\n      }\n\n      return this.model[optionName];\n    }\n  }]);\n\n  return ModelProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}