{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar barArray = [{\n  item: 'one'\n}, {\n  item: 'two'\n}];\nexport var UserProfileComponent = /*#__PURE__*/function () {\n  function UserProfileComponent(router, account, activateRouter, segmentManagementService, utility) {\n    _classCallCheck(this, UserProfileComponent);\n\n    this.router = router;\n    this.account = account;\n    this.activateRouter = activateRouter;\n    this.segmentManagementService = segmentManagementService;\n    this.utility = utility;\n    this.cartPhoto = '/assets/img/Blank.png';\n    this.formData = new FormData(); //Photo Uplad \n\n    this.btnText = \"Register\";\n    this.title = \"New Registration\";\n    this.CartColor = this.utility.ColorSechema();\n  }\n\n  _createClass(UserProfileComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      if (sessionStorage.getItem(\"angularBearerToken\")) {\n        if (sessionStorage.getItem(\"canAccessUserProfile\") == \"true\") {\n          this.BlankMaster();\n          this.City();\n          this.Position();\n          this.Country();\n\n          if (this.utility.AddorEdit == \"Edit\") {\n            this.btnText = \"Update\";\n            this.UserData = \"\";\n            this.account.GetuserDetailById(this.account.UserId).subscribe(function (singledata) {\n              _this.UserData = singledata;\n\n              for (var i = 0; i < _this.UserData.length; i++) {\n                _this.UserViewModel.Id = _this.UserData[i].id;\n                _this.UserViewModel.fname = _this.UserData[i].fname;\n                _this.UserViewModel.lname = _this.UserData[i].lname;\n                _this.UserViewModel.Addres = _this.UserData[i].addres;\n                _this.UserViewModel.City = _this.UserData[i].city;\n                _this.UserViewModel.Country = _this.UserData[i].country;\n                _this.UserViewModel.Position = _this.UserData[i].position;\n                _this.UserViewModel.Contact = _this.UserData[i].contact;\n                _this.UserViewModel.email = _this.UserData[i].email;\n                _this.UserViewModel.password = _this.UserData[i].password;\n                _this.UserViewModel.Photo = _this.UserData[i].photo;\n                _this.UserViewModel.canAccessDashboard = _this.UserData[i].canAccessDashboard;\n                _this.UserViewModel.canAccessUserProfile = _this.UserData[i].canAccessUserProfile;\n              }\n\n              console.log(_this.UserData);\n            });\n          } else {\n            this.BlankMaster();\n          }\n        } else {\n          this.router.navigate([\"user-login\"]);\n          this.utility.Messagebox(\"Can't Acceess User Profile Please Contact with Administration\", false);\n        }\n      } else {\n        this.router.navigate([\"user-login\"]); // this.reloadComponent();\n      }\n    }\n  }, {\n    key: \"BlankMaster\",\n    value: function BlankMaster() {\n      this.UserViewModel = {\n        Id: 0,\n        fname: \"\",\n        lname: \"\",\n        Addres: \"\",\n        City: \"\",\n        Country: \"\",\n        Position: \"\",\n        Photo: \"/assets/img/Me.jpg\",\n        email: \"\",\n        password: \"\",\n        canAccessDashboard: false,\n        canAccessUserProfile: false,\n        Contact: \"\"\n      };\n    }\n  }, {\n    key: \"Submit\",\n    value: function Submit() {\n      var _this2 = this;\n\n      if (this.utility.AddorEdit == \"Add\") {\n        // this.btnText =\"Register\"\n        // this.account.SaveUserDetail(this.UserViewModel).subscribe(data =>\n        //   {\n        //     this.SMS = data; \n        //     if(this.SMS.message ==\"Success\")\n        //     {\n        //        this.account.SaveUserPhoto(this.formData).toPromise().then(\n        //       res =>{this.utility.Messagebox('',true);});\n        //     }\n        //     else\n        //     {\n        //         this.utility.Messagebox('',false);\n        //     }\n        //   });\n        // this.formData.append('File',this.Photo);\n        // this.formData.append('File',this.btnText);\n        //  this.formData.append('File',this.title);\n        //  console.log( this.formData)\n        //  JSON.stringify(barArray)\n        this.formData.append('File', JSON.stringify(barArray));\n        console.log(this.formData);\n        this.account.SaveUserPhoto(this.formData).toPromise().then(function (res) {\n          _this2.utility.Messagebox('', true);\n        });\n      } else {\n        var updateRecord = {\n          //  Id  :  this.UserID,\n          Id: this.UserViewModel.Id,\n          fname: this.UserViewModel.fname,\n          lname: this.UserViewModel.lname,\n          email: this.UserViewModel.email,\n          password: this.UserViewModel.password,\n          addres: this.UserViewModel.Addres,\n          city: this.UserViewModel.City,\n          country: this.UserViewModel.Country,\n          position: this.UserViewModel.Position,\n          Photo: this.UserViewModel.Photo,\n          canAccessDashboard: this.UserViewModel.canAccessDashboard,\n          canAccessUserProfile: this.UserViewModel.canAccessUserProfile,\n          contact: this.UserViewModel.Contact\n        };\n        this.account.UpdateUserDetail(updateRecord).subscribe(function (data) {\n          _this2.SMS = data;\n\n          if (_this2.SMS.message == \"Success\") {\n            _this2.account.SaveUserPhoto(_this2.formData).toPromise().then(function (res) {\n              console.log(res); //Reset AddorEdit\n\n              _this2.utility.AddorEdit = \"Add\";\n              _this2.btnText = \"Register\";\n\n              _this2.utility.Messagebox('', true);\n\n              _this2.BlankMaster();\n            }, function (err) {\n              _this2.utility.Messagebox('', false);\n\n              console.log(err);\n            });\n          } else {\n            _this2.utility.Messagebox('', false);\n          }\n        }); //\n      }\n    }\n  }, {\n    key: \"City\",\n    value: function City() {\n      var _this3 = this;\n\n      this.segmentManagementService.GetDataValueById(8).subscribe(function (data) {\n        _this3.CityData = data; // console.log(this.CityData);\n      });\n    }\n  }, {\n    key: \"Country\",\n    value: function Country() {\n      var _this4 = this;\n\n      this.segmentManagementService.GetDataValueById(9).subscribe(function (data) {\n        _this4.CountryData = data; // console.log(this.CountryData);\n      });\n    }\n  }, {\n    key: \"Position\",\n    value: function Position() {\n      var _this5 = this;\n\n      this.account.GetAllUserGroups().subscribe(function (data) {\n        _this5.UserGroupData = data;\n      });\n      console.log(this.UserGroupData);\n    }\n  }, {\n    key: \"handleFileInput\",\n    value: function handleFileInput(files) {\n      var _this6 = this;\n\n      this.Photo = files.item(0);\n      var reader = new FileReader();\n\n      reader.onload = function (img) {\n        _this6.UserViewModel.Photo = img.target.result;\n      };\n\n      reader.readAsDataURL(this.Photo);\n      this.formData.append('File', this.Photo);\n    } // Mobile Field\n\n  }, {\n    key: \"numberOnly\",\n    value: function numberOnly(event) {\n      var charCode = event.which ? event.which : event.keyCode;\n\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return UserProfileComponent;\n}();","map":null,"metadata":{},"sourceType":"module"}