{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/layout.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"addVerticalSizesClassToRows\", \"allDayAppointments\", \"bottomVirtualRowHeight\", \"className\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"tableRef\", \"topVirtualRowHeight\", \"viewData\", \"width\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/runtime/inferno\";\nimport { Table } from \"../../table\";\nimport { AllDayPanelTableBody } from \"./table_body\";\nimport { LayoutProps } from \"../../layout_props\";\nimport { DefaultSizes } from \"../../../const\";\nexport var viewFunction = function viewFunction(_ref) {\n  var allDayPanelData = _ref.allDayPanelData,\n      emptyTableHeight = _ref.emptyTableHeight,\n      _ref$props = _ref.props,\n      allDayAppointments = _ref$props.allDayAppointments,\n      dataCellTemplate = _ref$props.dataCellTemplate,\n      tableRef = _ref$props.tableRef,\n      viewData = _ref$props.viewData,\n      width = _ref$props.width;\n  return createVNode(1, \"div\", \"dx-scheduler-all-day-panel\", [allDayAppointments, createComponentVNode(2, Table, {\n    className: \"dx-scheduler-all-day-table\",\n    height: emptyTableHeight,\n    width: width,\n    tableRef: tableRef,\n    children: createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanelData,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount,\n      dataCellTemplate: dataCellTemplate\n    })\n  })], 0);\n};\nexport var AllDayPanelLayoutProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(LayoutProps), Object.getOwnPropertyDescriptors({\n  className: \"\"\n})));\nimport { createReRenderEffect } from \"@devextreme/runtime/inferno\";\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var AllDayPanelLayout = /*#__PURE__*/(function () {\n  var AllDayPanelLayout = /*#__PURE__*/function (_InfernoWrapperCompon) {\n    _inherits(AllDayPanelLayout, _InfernoWrapperCompon);\n\n    var _super = _createSuper(AllDayPanelLayout);\n\n    function AllDayPanelLayout(props) {\n      var _this;\n\n      _classCallCheck(this, AllDayPanelLayout);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.__getterCache = {};\n      return _this;\n    }\n\n    _createClass(AllDayPanelLayout, [{\n      key: \"createEffects\",\n      value: function createEffects() {\n        return [createReRenderEffect()];\n      }\n    }, {\n      key: \"allDayPanelData\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.allDayPanelData) {\n          return this.__getterCache.allDayPanelData;\n        }\n\n        return this.__getterCache.allDayPanelData = function () {\n          return _this2.props.viewData.groupedData[0].allDayPanel;\n        }();\n      }\n    }, {\n      key: \"emptyTableHeight\",\n      get: function get() {\n        return this.allDayPanelData ? void 0 : DefaultSizes.allDayPanelHeight;\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        _get(_getPrototypeOf(AllDayPanelLayout.prototype), \"componentWillUpdate\", this).call(this);\n\n        if (this.props.viewData !== nextProps.viewData) {\n          this.__getterCache.allDayPanelData = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            dataCellTemplate: getTemplate(props.dataCellTemplate)\n          }),\n          allDayPanelData: this.allDayPanelData,\n          emptyTableHeight: this.emptyTableHeight,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return AllDayPanelLayout;\n  }(InfernoWrapperComponent);\n\n  AllDayPanelLayout.defaultProps = AllDayPanelLayoutProps;\n  return AllDayPanelLayout;\n})();","map":null,"metadata":{},"sourceType":"module"}