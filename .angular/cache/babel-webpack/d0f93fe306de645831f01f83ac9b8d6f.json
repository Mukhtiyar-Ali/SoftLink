{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CustomerService } from 'app/customer/customer.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/customer/customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/utility-service.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/tooltip\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/table\";\nimport * as i9 from \"@angular/common\";\n\nfunction LOVComponent_ng_container_9_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r4, \" \");\n  }\n}\n\nfunction LOVComponent_ng_container_9_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var emp_r8 = ctx.$implicit;\n    var column_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", emp_r8[column_r4], \"\");\n  }\n}\n\nfunction LOVComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 8);\n    i0.ɵɵtemplate(1, LOVComponent_ng_container_9_th_1_Template, 2, 1, \"th\", 9);\n    i0.ɵɵtemplate(2, LOVComponent_ng_container_9_td_2_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var column_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", column_r4);\n  }\n}\n\nfunction LOVComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\n\nfunction LOVComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 14);\n    i0.ɵɵlistener(\"click\", function LOVComponent_tr_11_Template_tr_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var emprow_r10 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.getRecord(emprow_r10);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var LOVComponent = /*#__PURE__*/(function () {\n  var LOVComponent = /*#__PURE__*/function () {\n    function LOVComponent(customer, router, utility, dialogRef, data) {\n      _classCallCheck(this, LOVComponent);\n\n      this.customer = customer;\n      this.router = router;\n      this.utility = utility;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.DisplyColumns = [];\n      this.CustomerData = [];\n    }\n\n    _createClass(LOVComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        if (this.utility.LOVOption == \"Customer\") {\n          this.Title = this.utility.Title;\n          this.customer.GetCustomers().subscribe(function (data) {\n            _this.APIData = data;\n            _this.DisplyColumns = [];\n\n            for (var i = 0; i < _this.APIData.length; i++) {\n              _this.CustomerData.push({\n                ID: _this.APIData[i].customerId,\n                Name: _this.APIData[i].customerName,\n                Mobile: _this.APIData[i].mobileNo,\n                Email: _this.APIData[i].emailAddress,\n                City: _this.APIData[i].cityName,\n                Country: _this.APIData[i].countryName\n              });\n            }\n\n            _this.DisplyColumns = ['ID', 'Name', 'Mobile', 'Email', 'City', 'Country'];\n          }); // console.log(this.CustomerData);\n\n          this.dataSource = new MatTableDataSource(this.CustomerData);\n        }\n      }\n    }, {\n      key: \"Cancel\",\n      value: function Cancel() {\n        this.dialogRef.close();\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter(filterValue) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n      }\n    }, {\n      key: \"getRecord\",\n      value: function getRecord(emprow) {\n        this.dialogRef.close({\n          data: {\n            CustomerID: emprow.ID\n          }\n        });\n      }\n    }]);\n\n    return LOVComponent;\n  }();\n\n  LOVComponent.ɵfac = function LOVComponent_Factory(t) {\n    return new (t || LOVComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UtilityServiceService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  LOVComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LOVComponent,\n    selectors: [[\"app-lov\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"left\", 1, \"right\", 3, \"click\"], [\"tooltip\", \"matTooltip\"], [1, \"text\", \"text-center\"], [\"matInput\", \"\", \"placeholder\", \"Filter\", 3, \"keyup\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", \"style\", \"background-color:black\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\", 2, \"background-color\", \"black\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"click\"]],\n    template: function LOVComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function LOVComponent_Template_div_click_0_listener() {\n          return ctx.Cancel();\n        });\n        i0.ɵɵtext(2, \"X\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\");\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"keyup\", function LOVComponent_Template_input_keyup_7_listener($event) {\n          return ctx.applyFilter($event.target.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"table\", 4);\n        i0.ɵɵtemplate(9, LOVComponent_ng_container_9_Template, 3, 1, \"ng-container\", 5);\n        i0.ɵɵtemplate(10, LOVComponent_tr_10_Template, 1, 0, \"tr\", 6);\n        i0.ɵɵtemplate(11, LOVComponent_tr_11_Template, 1, 0, \"tr\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.Title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DisplyColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.DisplyColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.DisplyColumns);\n      }\n    },\n    directives: [i4.MatDialogTitle, i5.MatTooltip, i6.MatFormField, i7.MatInput, i8.MatTable, i9.NgForOf, i8.MatHeaderRowDef, i8.MatRowDef, i8.MatColumnDef, i8.MatHeaderCellDef, i8.MatCellDef, i8.MatHeaderCell, i8.MatCell, i8.MatHeaderRow, i8.MatRow],\n    styles: [\".ScrollStyle[_ngcontent-%COMP%] {\\n  max-height: 400px;\\n  overflow-y: auto;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 500px !important;\\n  \\n}\\n\\n.right[_ngcontent-%COMP%] {\\n  float: right;\\n  font-weight: 700;\\n  cursor: pointer;\\n}\\n\\n.card-dialog-bar[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin-top: -25px;\\n  margin-left: -25px;\\n  margin-right: -25px;\\n  width: 100%;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.mat-row[_ngcontent-%COMP%]:hover {\\n  background-color: #43C6DB;\\n}\"]\n  });\n  return LOVComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}