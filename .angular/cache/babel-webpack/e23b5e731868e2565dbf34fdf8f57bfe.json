{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/row.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"isHeaderRow\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"styles\"];\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport { VirtualCell } from \"./virtual_cell\";\nexport var viewFunction = function viewFunction(_ref) {\n  var hasLeftVirtualCell = _ref.hasLeftVirtualCell,\n      hasRightVirtualCell = _ref.hasRightVirtualCell,\n      _ref$props = _ref.props,\n      children = _ref$props.children,\n      className = _ref$props.className,\n      isHeaderRow = _ref$props.isHeaderRow,\n      leftVirtualCellCount = _ref$props.leftVirtualCellCount,\n      leftVirtualCellWidth = _ref$props.leftVirtualCellWidth,\n      rightVirtualCellCount = _ref$props.rightVirtualCellCount,\n      rightVirtualCellWidth = _ref$props.rightVirtualCellWidth,\n      styles = _ref$props.styles;\n  return createVNode(1, \"tr\", className, [hasLeftVirtualCell && createComponentVNode(2, VirtualCell, {\n    width: leftVirtualCellWidth,\n    colSpan: leftVirtualCellCount,\n    isHeaderCell: isHeaderRow\n  }), children, hasRightVirtualCell && createComponentVNode(2, VirtualCell, {\n    width: rightVirtualCellWidth,\n    colSpan: rightVirtualCellCount,\n    isHeaderCell: isHeaderRow\n  })], 0, {\n    style: normalizeStyles(styles)\n  });\n};\nexport var RowProps = {\n  className: \"\",\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0,\n  isHeaderRow: false\n};\nexport var Row = /*#__PURE__*/(function () {\n  var Row = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(Row, _BaseInfernoComponent);\n\n    var _super = _createSuper(Row);\n\n    function Row(props) {\n      var _this;\n\n      _classCallCheck(this, Row);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      return _this;\n    }\n\n    _createClass(Row, [{\n      key: \"hasLeftVirtualCell\",\n      get: function get() {\n        var leftVirtualCellCount = this.props.leftVirtualCellCount;\n        return !!leftVirtualCellCount;\n      }\n    }, {\n      key: \"hasRightVirtualCell\",\n      get: function get() {\n        var rightVirtualCellCount = this.props.rightVirtualCellCount;\n        return !!rightVirtualCellCount;\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props),\n          hasLeftVirtualCell: this.hasLeftVirtualCell,\n          hasRightVirtualCell: this.hasRightVirtualCell,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return Row;\n  }(BaseInfernoComponent);\n\n  Row.defaultProps = RowProps;\n  return Row;\n})();","map":null,"metadata":{},"sourceType":"module"}