{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport * as clickEvent from \"../../events/click\";\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\nimport pointerEvents from \"../../events/pointer\";\nexport function subscribeToEvent(eventName) {\n  return function (element, handler, eventData) {\n    if (handler && element) {\n      eventsEngine.on(element, eventName, eventData, handler);\n      return function () {\n        eventsEngine.off(element, eventName, handler);\n      };\n    }\n\n    return;\n  };\n}\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");","map":null,"metadata":{},"sourceType":"module"}