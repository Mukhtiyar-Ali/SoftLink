{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ChartofAccountService = /*#__PURE__*/(function () {\n  var ChartofAccountService = /*#__PURE__*/function () {\n    function ChartofAccountService(http) {\n      _classCallCheck(this, ChartofAccountService);\n\n      this.http = http;\n      this.baseURL = \"https://localhost:44304/GLAccount/\";\n      this.ItemAccountURL = \"https://localhost:44304/ItemAccounts/\";\n    }\n\n    _createClass(ChartofAccountService, [{\n      key: \"getGL_Accounts\",\n      value: function getGL_Accounts() {\n        return this.http.get(this.baseURL + 'GetGLAccounts');\n      }\n    }, {\n      key: \"UpdateglAccount\",\n      value: function UpdateglAccount(data) {\n        return this.http.put(this.baseURL + 'Modify', data);\n      }\n    }, {\n      key: \"getAccountCode\",\n      value: function getAccountCode(PCode) {\n        return this.http.get(this.baseURL + 'GetMaxAccountCode/' + PCode); // return this.http.get('https://localhost:44304/GLAccount/GetMaxAccountCode/'+PCode);\n      }\n    }, {\n      key: \"AddChild\",\n      value: function AddChild(ChildData) {\n        return this.http.post(this.baseURL + 'AddChild', ChildData);\n      }\n    }, {\n      key: \"Delete\",\n      value: function Delete(accountId) {\n        return this.http.delete(this.baseURL + 'Delete/' + accountId);\n      }\n    }, {\n      key: \"AddSibling\",\n      value: function AddSibling(SiblingData) {\n        return this.http.post(this.baseURL + 'AddSibling', SiblingData);\n      } // Item Category Portion\n\n    }, {\n      key: \"getItemAccounts\",\n      value: function getItemAccounts() {\n        return this.http.get(this.ItemAccountURL + 'getItemAccounts');\n      }\n    }, {\n      key: \"GL_AccountsLOV\",\n      value: function GL_AccountsLOV() {\n        return this.http.get(this.ItemAccountURL + 'GL_AccountsLOV');\n      }\n    }, {\n      key: \"SaveMaster\",\n      value: function SaveMaster(savedata) {\n        return this.http.post(this.ItemAccountURL + 'SaveMaster', savedata);\n      }\n    }, {\n      key: \"EditMaster\",\n      value: function EditMaster(Editdata) {\n        return this.http.put(this.ItemAccountURL + 'EditMaster', Editdata);\n      }\n    }, {\n      key: \"DeleteMaster\",\n      value: function DeleteMaster(accountId) {\n        return this.http.delete(this.ItemAccountURL + 'DeleteMaster/' + accountId);\n      }\n    }]);\n\n    return ChartofAccountService;\n  }();\n\n  ChartofAccountService.ɵfac = function ChartofAccountService_Factory(t) {\n    return new (t || ChartofAccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChartofAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChartofAccountService,\n    factory: ChartofAccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChartofAccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}