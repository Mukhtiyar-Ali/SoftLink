{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nimport { SegmentManagementService } from '../segment-management.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../segment-management.service\";\nimport * as i2 from \"app/utility-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\n\nfunction SegmentManagementComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 22);\n    i0.ɵɵlistener(\"click\", function SegmentManagementComponent_tr_29_Template_tr_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r6);\n      var i_r4 = restoredCtx.index;\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.ClickedRow(i_r4);\n    })(\"click\", function SegmentManagementComponent_tr_29_Template_tr_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r6);\n      var value_r3 = restoredCtx.$implicit;\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.datavalue(value_r3.valueSetId);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"span\", 23);\n    i0.ɵɵtext(7, \"navigate_next \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var value_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r4 == ctx_r1.HighlightRow);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r4 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", value_r3.valueSetName, \" \");\n  }\n}\n\nfunction SegmentManagementComponent_tr_43_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"span\", 24);\n    i0.ɵɵlistener(\"click\", function SegmentManagementComponent_tr_43_Template_span_click_6_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var datavalue_r8 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.singledatavalue(datavalue_r8.dataValueId, datavalue_r8.dataValueName);\n    });\n    i0.ɵɵtext(7, \" create \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelementStart(9, \"span\", 25);\n    i0.ɵɵlistener(\"click\", function SegmentManagementComponent_tr_43_Template_span_click_9_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var datavalue_r8 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.delete(datavalue_r8.dataValueId);\n    });\n    i0.ɵɵtext(10, \" delete_outline \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var datavalue_r8 = ctx.$implicit;\n    var i_r9 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r9 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", datavalue_r8.dataValueName, \" \");\n  }\n}\n\nvar _c0 = function _c0() {\n  return {\n    \"height\": \"100px\",\n    \"width\": \"100%\"\n  };\n};\n\nvar _c1 = function _c1() {\n  return {\n    standalone: true\n  };\n};\n\nexport var SegmentManagementComponent = /*#__PURE__*/(function () {\n  var SegmentManagementComponent = /*#__PURE__*/function () {\n    function SegmentManagementComponent(Segement, utility, router) {\n      _classCallCheck(this, SegmentManagementComponent);\n\n      this.Segement = Segement;\n      this.utility = utility;\n      this.router = router;\n      this.colors = 'red';\n      this.valueId = 0;\n      this.Title = '';\n      this.datavalueId = 0;\n      this.SMS = '';\n      this.btnText = \"Save\";\n      this.btnToggle = \"Create\";\n\n      this.ClickedRow = function (index) {\n        this.HighlightRow = index;\n      };\n    }\n\n    _createClass(SegmentManagementComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        $(document).ready(function () {\n          $('#slide').click(function () {\n            $('#box').slideToggle(2000);\n          });\n        });\n        this.GetValueSets();\n      }\n    }, {\n      key: \"SubmitRecord\",\n      value: function SubmitRecord() {\n        var _this = this;\n\n        if (this.btnText == \"Save\") {\n          if (this.valueId == 0) {\n            alert('Please Select Master Segment Value');\n          } else {\n            var savedata = {\n              valueSetId: this.valueId,\n              dataValueName: this.InputDataValueName,\n              description: this.InputDescription\n            };\n            this.Segement.SaveDataValue(savedata).subscribe(function (data) {\n              _this.SMS = 'Save Successflly'; //Reset Input Type\n\n              _this.InputDataValueName = \"\";\n              _this.InputDescription = \"\"; // //Reset DataValue\n\n              _this.datavalue(_this.RedirectId); // Reset btnText\n\n\n              _this.btnText = \"Save\";\n            });\n          }\n        } else if (this.btnText == \"Update\" && this.datavalueId > 0) {\n          var updatedata = {\n            dataValueId: this.datavalueId,\n            dataValueName: this.InputDataValueName,\n            description: this.InputDescription\n          };\n          this.Segement.UpdateDataValue(updatedata).subscribe(function (data) {\n            _this.SMS = 'Updated Successflly'; //Reset Input Type\n\n            _this.InputDataValueName = \"\";\n            _this.InputDescription = \"\"; // //Reset DataValue\n\n            _this.datavalue(_this.RedirectId); // Reset btnText\n\n\n            _this.btnText = \"Save\";\n          });\n        }\n      }\n    }, {\n      key: \"datavalue\",\n      value: function datavalue(id) {\n        var _this2 = this;\n\n        this.Segement.GetDataValueById(id).subscribe(function (data) {\n          _this2.DataValues = data;\n          console.log(_this2.DataValues); // Reset btnText\n\n          _this2.btnText = \"Save\";\n          _this2.valueId = id;\n          _this2.RedirectId = id;\n\n          if (id == '1') {\n            _this2.Title = 'Unit Of Measure';\n          }\n\n          if (id == '2') {\n            _this2.Title = 'Item Main Type';\n          }\n\n          if (id == '3') {\n            _this2.Title = 'Item Sub Type';\n          }\n\n          if (id == '4') {\n            _this2.Title = 'Manufacture By';\n          }\n\n          if (id == '5') {\n            _this2.Title = 'Ware House';\n          }\n\n          if (id == '6') {\n            _this2.Title = 'Cost Center';\n          }\n\n          if (id == '7') {\n            _this2.Title = 'Invoice Type';\n          }\n\n          if (id == '8') {\n            _this2.Title = 'City';\n          }\n\n          if (id == '9') {\n            _this2.Title = 'Country';\n          }\n\n          _this2.SMS = '';\n        });\n      }\n    }, {\n      key: \"singledatavalue\",\n      value: function singledatavalue(id, dataValueName) {\n        if (id) {\n          this.datavalueId = id; // fill datavalueId for Updation\n\n          this.InputDataValueName = dataValueName;\n          this.btnText = \"Update\";\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(id) {\n        var _this3 = this;\n\n        this.Segement.DeleteDataValueId(id).subscribe(function (data) {\n          // //Reset DataValue\n          _this3.datavalue(_this3.RedirectId);\n        });\n      }\n    }, {\n      key: \"GetValueSets\",\n      value: function GetValueSets() {\n        var _this4 = this;\n\n        this.Segement.GetValueSets().subscribe(function (data) {\n          _this4.ValueSets = data;\n          console.log(data);\n        });\n      }\n    }, {\n      key: \"Back\",\n      value: function Back() {\n        this.router.navigate([\"Dashboard\"]);\n      }\n    }]);\n\n    return SegmentManagementComponent;\n  }();\n\n  SegmentManagementComponent.ɵfac = function SegmentManagementComponent_Factory(t) {\n    return new (t || SegmentManagementComponent)(i0.ɵɵdirectiveInject(i1.SegmentManagementService), i0.ɵɵdirectiveInject(i2.UtilityServiceService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SegmentManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SegmentManagementComponent,\n    selectors: [[\"app-segment-management\"]],\n    decls: 45,\n    vars: 8,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-8\"], [\"id\", \"slide\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"id\", \"box\", 3, \"ngStyle\"], [1, \"form-group\", \"row\"], [1, \"col-md-6\", \"pt-1\"], [1, \"example-full-width\"], [\"name\", \"Name\", \"matInput\", \"\", \"placeholder\", \"Name\", \"type\", \"text\", \"required\", \"required\", \"minlength\", \"3\", \"maxlength\", \"10\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"dataValueName\", \"ngModel\"], [1, \"col-md-6\", \"pt-\"], [\"data-md-tooltip\", \"Save Record\", 1, \"material-icons\", \"pointer\", 3, \"click\"], [1, \"col-md-5\"], [1, \"p-2\", \"border\", \"rounded\"], [1, \"table\", 2, \"margin-top\", \"10px\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [\"class\", \"pointer\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-7\"], [\"scope\", \"col\", \"colspan\", \"3\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pointer\", 3, \"click\"], [\"data-md-tooltip\", \"Show Value\", 1, \"material-icons\"], [\"data-md-tooltip\", \"Edit Record\", 1, \"material-icons\", \"pointer\", 3, \"click\"], [\"data-md-tooltip\", \"Delete Record\", 1, \"material-icons\", \"pointer\", 3, \"click\"]],\n    template: function SegmentManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(10, \"input\", 9, 10);\n        i0.ɵɵlistener(\"ngModelChange\", function SegmentManagementComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.InputDataValueName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelementStart(13, \"span\", 12);\n        i0.ɵɵlistener(\"click\", function SegmentManagementComponent_Template_span_click_13_listener() {\n          return ctx.SubmitRecord();\n        });\n        i0.ɵɵtext(14, \" save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"table\", 15);\n        i0.ɵɵelementStart(20, \"thead\", 16);\n        i0.ɵɵelementStart(21, \"tr\");\n        i0.ɵɵelementStart(22, \"th\", 17);\n        i0.ɵɵtext(23, \"S.No.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\", 17);\n        i0.ɵɵtext(25, \"Name.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\", 17);\n        i0.ɵɵtext(27, \"Value.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"tbody\");\n        i0.ɵɵtemplate(29, SegmentManagementComponent_tr_29_Template, 8, 4, \"tr\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 19);\n        i0.ɵɵelementStart(31, \"div\", 14);\n        i0.ɵɵelementStart(32, \"table\", 15);\n        i0.ɵɵelementStart(33, \"thead\", 16);\n        i0.ɵɵelementStart(34, \"tr\");\n        i0.ɵɵelementStart(35, \"th\", 17);\n        i0.ɵɵtext(36, \"S.No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\", 17);\n        i0.ɵɵtext(38, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"th\", 20);\n        i0.ɵɵtext(40, \"Action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"th\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"tbody\");\n        i0.ɵɵtemplate(43, SegmentManagementComponent_tr_43_Template, 11, 2, \"tr\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.btnToggle);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.InputDataValueName)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c1));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ValueSets);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DataValues);\n      }\n    },\n    directives: [i4.NgStyle, i5.MatFormField, i6.MatInput, i7.DefaultValueAccessor, i7.RequiredValidator, i7.MinLengthValidator, i7.MaxLengthValidator, i7.NgControlStatus, i7.NgModel, i4.NgForOf],\n    styles: [\"#box[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n#spanbtnedit[_ngcontent-%COMP%] {\\n  margin: -5px 0 0 0 !important;\\n}\\n\\n#spanbtndlt[_ngcontent-%COMP%] {\\n  margin: 0px 10px 0 0px !important;\\n}\\n\\nbutton.mat-button[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%], a.mat-button[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%], a.mat-raised-button[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%], a.mat-flat-button[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%], a.mat-stroked-button[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%] {\\n  vertical-align: top;\\n  font-size: 1.25em;\\n}\\n\\n.TopSizee[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: -22px;\\n}\\n\\n.pointer[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.tab[_ngcontent-%COMP%] {\\n  margin-left: 5.5em;\\n}\\n\\n.btnSave[_ngcontent-%COMP%] {\\n  padding: revert;\\n}\\n\\n[data-md-tooltip][_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n[data-md-tooltip][_ngcontent-%COMP%]:before {\\n  content: attr(data-md-tooltip);\\n  position: absolute;\\n  bottom: -35px;\\n  left: 50%;\\n  padding: 8px;\\n  transform: translateX(-50%) scale(0);\\n  transition: transform 0.3s ease-in-out;\\n  transform-origin: top;\\n  background: #616161e6;\\n  color: white;\\n  border-radius: 2px;\\n  font-size: 12px;\\n  font-family: Roboto, sans-serif;\\n  font-weight: 400;\\n}\\n\\n[data-md-tooltip][_ngcontent-%COMP%]:hover:before {\\n  transform: translateX(-50%) scale(1);\\n}\\n\\n.table[_ngcontent-%COMP%]   tr.active[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  background-color: gray !important;\\n  color: white;\\n}\"]\n  });\n  return SegmentManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}