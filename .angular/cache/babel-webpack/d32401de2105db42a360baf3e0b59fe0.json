{"ast":null,"code":"import _toConsumableArray from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nvar USER_INFO = [{\n  id: 1,\n  \"Item Code\": \"\",\n  \"Description\": \"\",\n  \"Barcode\": 36\n}, {\n  id: 2,\n  \"Item Code\": \"\",\n  \"Description\": \"\",\n  \"Barcode\": 28\n}, {\n  id: 3,\n  \"Item Code\": \"\",\n  \"Description\": \"\",\n  \"Barcode\": 20\n}, {\n  id: 4,\n  \"Item Code\": \"\",\n  \"Description\": \"\",\n  \"Barcode\": 43\n}];\nvar USER_SCHEMA = {\n  \"Item Code\": \"itemCode\",\n  \"Description\": \"select\",\n  \"Barcode\": \"number\",\n  \"isEdit\": \"isEdit\"\n};\n\nvar AttachBarcodeComponent = /*#__PURE__*/function () {\n  function AttachBarcodeComponent(utility, dialog, router) {\n    _classCallCheck(this, AttachBarcodeComponent);\n\n    this.utility = utility;\n    this.dialog = dialog;\n    this.router = router;\n    this.displayedColumns = ['Item Code', 'Description', 'Barcode', 'isEdit'];\n    this.dataSource = USER_INFO;\n    this.dataSchema = USER_SCHEMA;\n    this.StartingNumber = 0;\n    this.TotalBarcode = 0;\n    this.SelectBarcode = '';\n    this.CartColor = this.utility.ColorSechema();\n  }\n\n  _createClass(AttachBarcodeComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var newRow = {\n        id: Math.floor(Math.random() * 1000),\n        \"Item Code\": \"\",\n        \"Description\": \"\",\n        \"Barcode\": 0,\n        isEdit: true\n      };\n      this.dataSource = [newRow].concat(_toConsumableArray(this.dataSource));\n      this.TotalNumberBarcode();\n    }\n  }, {\n    key: \"removeRow\",\n    value: function removeRow(id) {\n      this.dataSource = this.dataSource.filter(function (u) {\n        return u.id !== id;\n      });\n      this.TotalNumberBarcode();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(e) {\n      alert(e);\n      console.log(e);\n    }\n  }, {\n    key: \"Close\",\n    value: function Close() {\n      this.reloadComponent();\n    }\n  }, {\n    key: \"BarcodePrint\",\n    value: function BarcodePrint() {}\n  }, {\n    key: \"Back\",\n    value: function Back() {\n      this.router.navigate([\"Items\"]);\n    }\n  }, {\n    key: \"reloadComponent\",\n    value: function reloadComponent() {\n      // let currentUrl = this.router.navigate([\"dashboard\"]); \n      //     this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n      //     this.router.onSameUrlNavigation = 'reload';\n      this.router.navigate([\"dashboard\"]);\n    }\n  }, {\n    key: \"TotalNumberBarcode\",\n    value: function TotalNumberBarcode() {\n      this.StartingNumber = 0;\n      this.TotalBarcode = 0;\n      console.log(this.dataSource);\n\n      for (var i = 0; i < this.dataSource.length; i++) {\n        // this.StartingNumber += this.StartingNumber = this.dataSource[i].Barcode;\n        this.TotalBarcode = this.dataSource[i].Barcode;\n        this.StartingNumber += this.TotalBarcode;\n      }\n    }\n  }]);\n\n  return AttachBarcodeComponent;\n}();\n\nAttachBarcodeComponent = __decorate([Component({\n  selector: 'app-attach-barcode',\n  templateUrl: './attach-barcode.component.html',\n  styleUrls: ['./attach-barcode.component.scss']\n}), __metadata(\"design:paramtypes\", [UtilityServiceService, MatDialog, Router])], AttachBarcodeComponent);\nexport { AttachBarcodeComponent };","map":null,"metadata":{},"sourceType":"module"}