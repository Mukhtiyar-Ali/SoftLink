{"ast":null,"code":"import _classCallCheck from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/SoftLink/Web Applictions/Standard Trading/Soft Link/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Router } from '@angular/router';\nimport { UtilityServiceService } from 'app/utility-service.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CustomerService } from 'app/customer/customer.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChartofAccountService } from 'app/glaccounts/chartof-account.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SupplierService } from 'app/supplier/supplier.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/customer/customer.service\";\nimport * as i2 from \"app/supplier/supplier.service\";\nimport * as i3 from \"app/glaccounts/chartof-account.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"app/utility-service.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/table\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/paginator\";\nimport * as i13 from \"@angular/material/sort\";\n\nfunction LOVComponent_ng_container_11_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵlistener(\"click\", function LOVComponent_ng_container_11_th_1_Template_th_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var column_r4 = i0.ɵɵnextContext().$implicit;\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.ChangeSort(column_r4);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r4 = i0.ɵɵnextContext().$implicit;\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"matSortActive\", ctx_r5.sortField);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", column_r4, \" \");\n  }\n}\n\nfunction LOVComponent_ng_container_11_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var emp_r11 = ctx.$implicit;\n    var column_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(emp_r11[column_r4]);\n  }\n}\n\nfunction LOVComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 11);\n    i0.ɵɵtemplate(1, LOVComponent_ng_container_11_th_1_Template, 2, 2, \"th\", 12);\n    i0.ɵɵtemplate(2, LOVComponent_ng_container_11_td_2_Template, 2, 1, \"td\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var column_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", column_r4);\n  }\n}\n\nfunction LOVComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\n\nfunction LOVComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 17);\n    i0.ɵɵlistener(\"click\", function LOVComponent_tr_13_Template_tr_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r15);\n      var emprow_r13 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.getRecord(emprow_r13);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-color\", ctx_r3.color);\n  }\n}\n\nvar _c0 = function _c0() {\n  return [10, 30, 50, 100];\n};\n\nexport var LOVComponent = /*#__PURE__*/(function () {\n  var LOVComponent = /*#__PURE__*/function () {\n    function LOVComponent(customer, supplier, glAccountService, router, utility, dialogRef, data) {\n      _classCallCheck(this, LOVComponent);\n\n      this.customer = customer;\n      this.supplier = supplier;\n      this.glAccountService = glAccountService;\n      this.router = router;\n      this.utility = utility;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.sortField = 'ID';\n      this.show = true;\n      this.DisplyColumns = [];\n      this.CustomerData = [];\n      this.SupplierData = [];\n      this.GLAccountData = [];\n      this.ItemsData = [];\n      this.color = this.utility.ColorSelection();\n    }\n\n    _createClass(LOVComponent, [{\n      key: \"matSort\",\n      set: function set(sort) {\n        if (!this.dataSource.sort) {\n          this.dataSource.sort = sort;\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator; // this.dataSource.sort = this.sort;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.utility.LOVOption == \"Customer\") {\n          this.getCustomerData();\n          this.sortField = 'ID';\n          this.dataSource = new MatTableDataSource(this.CustomerData);\n        } else if (this.utility.LOVOption == \"Supplier\") {\n          this.getSupplierData();\n          this.sortField = 'ID';\n          this.dataSource = new MatTableDataSource(this.SupplierData);\n        } else if (this.utility.LOVOption == \"Customer GL Accounts\" || this.utility.LOVOption == \"Supplier GL Account\") {\n          this.getGLAccounts();\n          this.sortField = 'Account';\n          this.dataSource = new MatTableDataSource(this.GLAccountData);\n        } else if (this.utility.LOVOption == \"Items\") {\n          this.getSupplierData();\n          this.sortField = 'ID';\n          this.dataSource = new MatTableDataSource(this.SupplierData);\n        }\n\n        this.dataSource.paginator = this.paginator; // this.dataSource.sort = this.sort;\n      }\n    }, {\n      key: \"getSupplierData\",\n      value: function getSupplierData() {\n        this.Title = this.utility.Title; // this.supplier.GetSupplier().subscribe(data => {\n        // this.APIData = data;\n\n        this.APIData = this.utility.SupplierObject;\n        this.DisplyColumns = [];\n\n        for (var i = 0; i < this.APIData.length; i++) {\n          this.SupplierData.push({\n            'ID': this.APIData[i].supplierId,\n            'Supplier Name': this.APIData[i].supplierName,\n            'Mobile No': this.APIData[i].mobileNo,\n            'Email': this.APIData[i].emailAddress,\n            'City': this.APIData[i].cityName,\n            'Country': this.APIData[i].countryName\n          });\n        }\n\n        this.DisplyColumns = ['ID', 'Supplier Name', 'Mobile No', 'Email', 'City', 'Country']; // });\n      }\n    }, {\n      key: \"ChangeSort\",\n      value: function ChangeSort(event) {\n        this.sortField = event; // this.dataSource.sort = this.sort;\n      }\n    }, {\n      key: \"getCustomerData\",\n      value: function getCustomerData() {\n        this.Title = this.utility.Title; // this.customer.GetCustomers().subscribe(data => {\n        // this.APIData = data;\n\n        this.APIData = this.utility.CustomerObject;\n        this.DisplyColumns = [];\n\n        for (var i = 0; i < this.APIData.length; i++) {\n          this.CustomerData.push({\n            'ID': this.APIData[i].customerId,\n            'Customer Name': this.APIData[i].customerName,\n            'Mobile No': this.APIData[i].mobileNo,\n            'Email': this.APIData[i].emailAddress,\n            'City': this.APIData[i].cityName,\n            'Country': this.APIData[i].countryName\n          });\n        }\n\n        this.DisplyColumns = ['ID', 'Customer Name', 'Mobile No', 'Email', 'City', 'Country']; // });\n      }\n    }, {\n      key: \"getGLAccounts\",\n      value: function getGLAccounts() {\n        var _this = this;\n\n        this.Title = this.utility.Title;\n        this.glAccountService.GL_AccountsLOV().subscribe(function (data) {\n          _this.APIData = data;\n          _this.DisplyColumns = [];\n\n          for (var i = 0; i < _this.APIData.length; i++) {\n            _this.GLAccountData.push({\n              'Account': _this.APIData[i].accountCode,\n              'Description': _this.APIData[i].accountName\n            });\n          }\n\n          _this.DisplyColumns = ['Account', 'Description'];\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    }, {\n      key: \"getItemsData\",\n      value: function getItemsData() {\n        this.Title = this.utility.Title;\n        this.APIData = this.utility.ItemsObject;\n        console.log(this.APIData);\n        this.DisplyColumns = [];\n\n        for (var i = 0; i < this.APIData.length; i++) {\n          this.ItemsData.push({\n            'Code': this.APIData[i].itemCode,\n            'Description': this.APIData[i].itemDescription,\n            'UOM': this.APIData[i].uomName,\n            'MainType': this.APIData[i].mainTypeName,\n            'SubType': this.APIData[i].subTypeName,\n            'Manufacture': this.APIData[i].manufactureByName\n          });\n        }\n\n        this.DisplyColumns = ['Code', 'Description', 'UOM', 'Main Type', 'Sub Type', 'Manufacture By']; // });\n      }\n    }, {\n      key: \"Cancel\",\n      value: function Cancel() {\n        this.dialogRef.close();\n        this.utility.CustomerObject = \"\";\n        this.utility.SupplierObject = \"\";\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter(filterValue) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n      }\n    }, {\n      key: \"getRecord\",\n      value: function getRecord(emprow) {\n        if (this.utility.LOVOption == \"Customer\") {\n          this.selectedRow = emprow.ID;\n          this.dialogRef.close({\n            data: {\n              CustomerID: emprow.ID\n            }\n          });\n        } else if (this.utility.LOVOption == \"Supplier\") {\n          this.selectedRow = emprow.ID;\n          this.dialogRef.close({\n            data: {\n              SupplierID: emprow.ID\n            }\n          });\n        } else if (this.utility.LOVOption == \"Customer GL Accounts\" || this.utility.LOVOption == \"Supplier GL Account\") {\n          this.selectedRow = emprow.account;\n          this.dialogRef.close({\n            data: {\n              AccountCode: emprow.Account,\n              Description: emprow.Description\n            }\n          });\n        }\n      }\n    }]);\n\n    return LOVComponent;\n  }();\n\n  LOVComponent.ɵfac = function LOVComponent_Factory(t) {\n    return new (t || LOVComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.SupplierService), i0.ɵɵdirectiveInject(i3.ChartofAccountService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.UtilityServiceService), i0.ɵɵdirectiveInject(i6.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  LOVComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LOVComponent,\n    selectors: [[\"app-lov\"]],\n    viewQuery: function LOVComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matSort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 7,\n    consts: [[\"mat-dialog-title\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"left\", 1, \"right\", 3, \"click\"], [\"tooltip\", \"matTooltip\"], [1, \"text\", \"text-center\"], [1, \"p-2\", \"border\", \"rounded\"], [\"matInput\", \"\", \"placeholder\", \"Filter\", 3, \"keyup\"], [1, \"ScrollStyle\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"backgroundColor\", \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"matSort\", \"\", \"matSortDirection\", \"asc\", \"matSortDisableClear\", \"\", 3, \"matSortActive\", \"click\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"matSort\", \"\", \"matSortDirection\", \"asc\", \"matSortDisableClear\", \"\", 3, \"matSortActive\", \"click\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"click\"]],\n    template: function LOVComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function LOVComponent_Template_div_click_0_listener() {\n          return ctx.Cancel();\n        });\n        i0.ɵɵtext(2, \"X\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"keyup\", function LOVComponent_Template_input_keyup_8_listener($event) {\n          return ctx.applyFilter($event.target.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"table\", 6);\n        i0.ɵɵtemplate(11, LOVComponent_ng_container_11_Template, 3, 1, \"ng-container\", 7);\n        i0.ɵɵtemplate(12, LOVComponent_tr_12_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵtemplate(13, LOVComponent_tr_13_Template, 1, 2, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"mat-paginator\", 10);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.Title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DisplyColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.DisplyColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.DisplyColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    directives: [i6.MatDialogTitle, i7.MatTooltip, i8.MatFormField, i9.MatInput, i10.MatTable, i11.NgForOf, i10.MatHeaderRowDef, i10.MatRowDef, i12.MatPaginator, i10.MatColumnDef, i10.MatHeaderCellDef, i10.MatCellDef, i10.MatHeaderCell, i13.MatSortHeader, i13.MatSort, i10.MatCell, i10.MatHeaderRow, i10.MatRow],\n    styles: [\".ScrollStyle[_ngcontent-%COMP%] {\\n  max-height: 400px;\\n  overflow-y: auto;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 500px !important;\\n  \\n}\\n\\n.right[_ngcontent-%COMP%] {\\n  float: right;\\n  font-weight: 700;\\n  cursor: pointer;\\n}\\n\\n.card-dialog-bar[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin-top: -25px;\\n  margin-left: -25px;\\n  margin-right: -25px;\\n  width: 100%;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.mat-row[_ngcontent-%COMP%]:not(:hover) {\\n  background: transparent !important;\\n}\\n\\n.mat-row[_ngcontent-%COMP%]:hover    > .mat-cell[_ngcontent-%COMP%] {\\n  color: white;\\n}\"]\n  });\n  return LOVComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}